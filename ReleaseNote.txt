core 소스를 동작시키기 위해 행한 작업 목록

합의가 종료되었음에도 다음 요청 메세지를 인식하지 못함
 - 합의 종료 후 진행 상태를 초기화
초기화는 응답 완료 후 블록체인 조정까지 끝난 후 진행한다.

각 노드들이 블록 검증 후 각자 블록체인에 블록을 추가해야 함
 - 노드에 블록체인 슬라이스 추가, 블록체인 관련 함수들도 함께 추가(블록 추가, 검증 등)

블록체인 형태로 요청 데이터를 받고, 그에 맞게 응답해야 함
 - 요청 데이터, 응답 데이터 형식을 블록 데이터에 맞게 변경

블록 검증 과정 필요
 - 메세지 검증에 블록 검증 추가(현재 노드가 가지고 있는 블록체인 최상단 블록의 해시 값이 
새로 들어온 블록의 이전 해시 값과 일치하는지 확인)

합의 진행이 종료된 후에도 이전 합의 메세지를 처리하다가 노드가 다운되는 상황 방지
 - 각 합의 진행 과정에서 해당 과정이 종료된 후에 이전 합의 메세지를 처리하지 않도록 조건 추가

요청 메세지가 한번에 여러개 들어올 경우 순차 처리하도록 하기
 - 한 번에 여러 요청 메세지가 들어오는 경우 저장했다가 하나씩 처리하도록 버퍼 이용

리더 노드에서 응답을 처리할 경우, 리더 노드의 합의가 끝나기 전에 응답이 오면 처리하기 어려움
 - 응답 전용 노드 추가(합의 종료 메세지를 받아서 클라이언트에 응답하는 노드)

메세지 여러개를 동시에 실행하려다 에러가 발생하는 현상
 - 라우터 함수(메세지 받는 고루틴)에 sync.WaitGroup을 넣어 대기하도록 하고,
함수 내부에서 각 메세지 처리 과정에 mutex.Lock()을 실행하여 여러 메세지가 한번에 실행되지 않도록
락을 걸어두었다.

모든 응답이 올때까지 기다릴 경우 시간 지연이 심한데다 합의 메세지가 다 오지 않는 경우도 발생
 - 응답 노드에 응답이 일정 개수 이상이면 바로 클라이언트에 응답하고, 새 합의를 시작하도록 조건 변경
또한 블록체인을 합의 상황에 맞게 조정함(블록 정보를 모든 노드에 전파해 필요하다면 추가하도록 함)

응답노드가 응답한 후 리더노드에 다시 한번 응답을 보내는 문제
 - 응답노드가 응답 후 모든 노드에 블록을 추가하도록 블록 내용을 전파(각자 추가하던 부분은 삭제)
블록 추가 후 리더노드는 새 합의를 시작한다.

응답 보내는 도중 응답 완료가 와서 응답을 여러번 처리하는 문제
 - 응답 메세지를 채널로 받아서 버퍼에 저장해 두는 식으로 처리하고,
응답은 버퍼에서 메시지를 확인해서 처리하는 방식으로 바꾸었다.

서브노드들이 블록을 추가하고 초기화하기 전에 합의가 시작되어 메시지를 처리하지 못하는 문제
 - 초기화 전에 들어오는 메시지가 버퍼에 저장되므로 초기화 후 버퍼에서 메시지를 꺼내서 처리하도록 한다.